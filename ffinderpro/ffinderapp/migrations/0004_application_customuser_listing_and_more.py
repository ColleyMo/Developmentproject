# Generated by Django 4.2.10 on 2024-03-20 15:04

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("ffinderapp", "0003_alter_player_date_of_birth"),
    ]

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("applied_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("is_player", models.BooleanField(default=False)),
                ("is_team", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Custom users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Listing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("requirements", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "team_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="team_listing_photos/"
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="userprofile",
            name="user",
        ),
        migrations.RemoveField(
            model_name="player",
            name="position",
        ),
        migrations.RemoveField(
            model_name="player",
            name="previous_clubs",
        ),
        migrations.RemoveField(
            model_name="player",
            name="user_profile",
        ),
        migrations.RemoveField(
            model_name="team",
            name="user_profile",
        ),
        migrations.AddField(
            model_name="team",
            name="photo",
            field=models.ImageField(blank=True, null=True, upload_to="team_photos/"),
        ),
        migrations.AlterField(
            model_name="player",
            name="address",
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AlterField(
            model_name="player",
            name="city",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name="player",
            name="photo",
            field=models.ImageField(blank=True, null=True, upload_to="player_photos/"),
        ),
        migrations.CreateModel(
            name="PlayerProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="ffinderapp.customuser",
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("address", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(blank=True, max_length=100)),
                (
                    "photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="player_photos/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TeamProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="ffinderapp.customuser",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("location", models.CharField(max_length=255)),
                ("league", models.CharField(max_length=100)),
                ("league_division", models.CharField(max_length=50)),
                ("level_on_pyramid", models.CharField(max_length=50)),
                (
                    "photo",
                    models.ImageField(blank=True, null=True, upload_to="team_photos/"),
                ),
            ],
        ),
        migrations.DeleteModel(
            name="Profile",
        ),
        migrations.DeleteModel(
            name="UserProfile",
        ),
        migrations.AddField(
            model_name="listing",
            name="team",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="ffinderapp.team"
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="listing",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="ffinderapp.listing"
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="player",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="ffinderapp.player"
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="user",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                to="ffinderapp.customuser",
            ),
        ),
        migrations.AddField(
            model_name="team",
            name="user",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                to="ffinderapp.customuser",
            ),
        ),
    ]
